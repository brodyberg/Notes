-- Haskell Playground 1.0
import System.IO  
import Control.Monad
import ProjectRosalind.Fasta (parseFasta)

main = do  
        print "bar"
        handle <- openFile "/Users/brodyberg/Desktop/FASTA_actual.txt" ReadMode
        contents <- hGetContents handle
        putStrLn (getLongestSubstring $ fmap fastaSeq (parseFasta contents))
        print "foo"
       -- hClose handle  
        putStrLn "foo"

readLocalFile
--main


-- putStrLn "foo"


x
q

--head "foo"
--tail "foo"
--append "f" []
--"f" ++ []
--"gat" ++ ["ga"]
--"gat" : ["ga"]
--"g" ++ "a"
--"foo" ++ ['a']
--
--"g"
--
--[""] ++ []
--[""] ++ ["b"]
--
--substrings "a"
--substrings "aa"
--substrings "aaa"
--substrings "aaaa"
--
--
--substrings ""
--substrings "a"
--substrings "ga"
--substrings "gat"
--substrings "gatt"
--substrings "gatta"
--substrings "gattac"
--substrings "gattaca"
--
----quickCheck prop_allPossibleSubstringCount
--
--
--allSubstrings ""
--allSubstrings "a"
--allSubstrings "ga"
--allSubstrings "gat"
--allSubstrings "gatt"
--allSubstrings "gatta"
--allSubstrings "gattac"
--allSubstrings "gattaca"

--getLongestSubstring strings
--
--x
--
--parseFasta x
--
----z = parseFasta y
--n
--n'
--z 
--
--getLongestSubstring $ fmap fastaSeq z'

--fmap (\r -> fastaSeq r) z 
